spring.application.name=smartContactManager

server.port=8123

#DB;
spring.datasource.url=jdbc:YOUR-DB-URL
spring.datasource.username=YOUR-DB-USERNAME
spring.datasource.password=YOUR-DB-PASSWORD

# Database driver (choose either MySQL or MariaDB)
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Hibernate JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#file
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

#mail config

# -------------------------------------
# SMTP Server Configuration
# -------------------------------------
# The mail server host (Gmail SMTP server)
spring.mail.host=smtp.gmail.com
# The SMTP server port (587 for TLS, 465 for SSL, 25 for plain)
spring.mail.port=587
# Your email address used to send the mail
spring.mail.username=your_email@gmail.com
# App-specific password (especially if using Gmail with 2FA)
spring.mail.password=your_app_password

# -------------------------------------
# Protocol and Security Settings
# -------------------------------------
# Protocol to be used for sending email
spring.mail.protocol=smtp
# Enable SMTP authentication
spring.mail.properties.mail.smtp.auth=true
# Enable STARTTLS encryption
spring.mail.properties.mail.smtp.starttls.enable=true

# -------------------------------------
# Optional Settings for Debugging and Performance
# -------------------------------------
# Default encoding for emails
spring.mail.default-encoding=UTF-8
# Check if mail server connection is possible at startup
spring.mail.test-connection=true
# Connection timeout in milliseconds
spring.mail.properties.mail.smtp.connectiontimeout=5000
# Read timeout in milliseconds
spring.mail.properties.mail.smtp.timeout=5000
# Write timeout in milliseconds
spring.mail.properties.mail.smtp.writetimeout=5000
# Enable debug logging for mail sending process (helpful during development)
spring.mail.properties.mail.debug=true

